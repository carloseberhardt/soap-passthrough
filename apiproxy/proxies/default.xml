<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description>Default Proxy to create flows on an API</Description>
    <FaultRules/>
    <Flows>
        <Flow name="Customer Service WSDL">
            <Description></Description>
            <Request/>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>jsCustomerWSDL</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath &quot;/CustomerService&quot;) and (request.verb = &quot;GET&quot;) and (request.querystring := &quot;WSDL&quot;)</Condition>
        </Flow>
        <Flow name="Order Service WSDL">
            <Description></Description>
            <Request/>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>jsOrderWSDL</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath &quot;/OrderService&quot;) and (request.verb = &quot;GET&quot;) and (request.querystring := &quot;WSDL&quot;)</Condition>
        </Flow>
        <Flow name="Customer Service endpoint">
            <Description></Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>jsRemoveWsse</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath &quot;/CustomerService&quot;) and (request.verb = &quot;POST&quot;)</Condition>
        </Flow>
        <Flow name="Order Service endpoint">
            <Description></Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>jsRemoveWsse</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath &quot;/OrderService&quot;) and (request.verb = &quot;POST&quot;)</Condition>
        </Flow>
    </Flows>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <FaultRules/>
                <Name>GetKeyFromHeader</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>VerifyAPIKey</Name>
            </Step>
            <Step>
                <Condition>(secret != verifyapikey.VerifyAPIKey.client_secret) or (verifyapikey.VerifyAPIKey.failed = true)</Condition>
                <FaultRules/>
                <Name>UnauthorizedFault</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/v1/aj</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>
